# Generated by Django 5.2 on 2025-05-09 09:00

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(max_length=255, verbose_name='Путь к файлу')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('status', models.CharField(choices=[('UPLOADED', 'Загружен'), ('UNDER_REVIEW', 'На проверке'), ('ACCEPTED', 'Принят'), ('REJECTED', 'Отклонен')], default='UPLOADED', max_length=20, verbose_name='Статус')),
                ('comment', models.TextField(blank=True, default='', max_length=500, verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Электронная почта')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Фамилия')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, max_length=150, verbose_name='Отчество')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Кандидат',
                'verbose_name_plural': 'Кандидаты',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='Отдел')),
                ('position', models.CharField(blank=True, max_length=100, verbose_name='Должность')),
                ('hire_date', models.DateField(blank=True, null=True, verbose_name='Дата найма')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='request_app.document')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='request_app.employee')),
            ],
            options={
                'verbose_name': 'Обратная связь',
                'verbose_name_plural': 'Обратная связь',
            },
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_at', models.DateTimeField(verbose_name='Запланировано на')),
                ('status', models.CharField(choices=[('SCHEDULED', 'Запланировано'), ('COMPLETED', 'Проведено'), ('CANCELLED', 'Отменено')], default='SCHEDULED', max_length=20, verbose_name='Статус')),
                ('result', models.CharField(choices=[('SUCCESS', 'Успешно'), ('FAILURE', 'Неуспешно'), ('PENDING', 'Ожидает')], default='PENDING', max_length=20, verbose_name='Результат')),
                ('comment', models.TextField(blank=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='request_app.candidate')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='request_app.employee')),
            ],
            options={
                'verbose_name': 'Собеседование',
                'verbose_name_plural': 'Собеседования',
                'ordering': ['scheduled_at'],
            },
        ),
        migrations.AddField(
            model_name='document',
            name='interview',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='request_app.interview'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
            },
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('education', models.CharField(blank=True, choices=[('SECONDARY', 'Среднее'), ('HIGHER', 'Высшее'), ('POSTGRADUATE', 'Аспирантура')], max_length=20, verbose_name='Образование')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Номер телефона')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('PENDING', 'На рассмотрении'), ('ACCEPTED', 'Принято'), ('REJECTED', 'Отклонено')], default='PENDING', max_length=20, verbose_name='Статус')),
                ('comment', models.TextField(blank=True, default='', max_length=500, verbose_name='Комментарий')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resumes', to='request_app.candidate')),
            ],
            options={
                'verbose_name': 'Резюме',
                'verbose_name_plural': 'Резюме',
            },
        ),
    ]
